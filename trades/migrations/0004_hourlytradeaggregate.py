# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-18 20:16
from __future__ import unicode_literals

from django.db import migrations, models
from datetime import timedelta
from django.utils import timezone
import django.db.models.deletion
from core.constants import CURRENCIES

def migrate_to_hourly_trade_aggregations(apps, *_, **__):
    Trade = apps.get_model('trades', 'Trade')
    HourlyTradeAggregate = apps.get_model('trades', 'HourlyTradeAggregate')

    earliest_trade = Trade.objects.first()
    if not earliest_trade:
        return

    earliest_trade_date = earliest_trade.created
    running_date = Trade.objects.last().created
    while running_date >= earliest_trade_date:
        # get all trades for this hour
        trades_for_this_hour_queryset = Trade.objects.filter(
            created__lt=running_date,
            created__gte=(running_date - timedelta(hours=1)),
        )
        # aggregate trades by currency combinations
        if trades_for_this_hour_queryset.exists():
            for buy_currency_id in CURRENCIES.keys():
                for sell_currency_id in CURRENCIES.keys():
                    # filter trades by buy and sell
                    # create aggregate data dictionary
                    hourly_aggregates = trades_for_this_hour_queryset.filter(
                        buy_currency_id=buy_currency_id,
                        sell_currency_id=sell_currency_id,
                    ).aggregate(
                        hour_created=models.Min('created'),
                        low=models.Min('trade_ratio'),
                        high=models.Max('trade_ratio'),
                        average=models.Avg('trade_ratio'),
                        total=models.Count('id'),
                    )

                    # create aggregate data object
                    if hourly_aggregates.get('total'):
                        new_hourly_object = HourlyTradeAggregate.objects.create(
                            buy_currency_id=buy_currency_id,
                            sell_currency_id=sell_currency_id,
                            low_ratio=hourly_aggregates.get('low'),
                            average_ratio=hourly_aggregates.get('average'),
                            high_ratio=hourly_aggregates.get('high'),
                            number_of_trades=hourly_aggregates.get('total'),
                        )
                        # reassign created date on object
                        new_hourly_object.created = hourly_aggregates.get('hour_created')
                        new_hourly_object.save()

            # delete all trades in date range
            trades_for_this_hour_queryset.delete()
        # decriment date
        running_date -= timedelta(hours=1)


def dummy_function(*_, **__):
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('trades', '0003_fix_currencies'),
    ]

    operations = [
        migrations.CreateModel(
            name='HourlyTradeAggregate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('low_ratio', models.DecimalField(decimal_places=6, max_digits=20)),
                ('average_ratio', models.DecimalField(decimal_places=6, max_digits=20)),
                ('high_ratio', models.DecimalField(decimal_places=6, max_digits=20)),
                ('buy_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hourly_buys', to='trades.Currency')),
                ('sell_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hourly_sells', to='trades.Currency')),
                ('number_of_trades', models.PositiveIntegerField()),
            ],
        ),
        migrations.RunPython(
            code=migrate_to_hourly_trade_aggregations,
            reverse_code=dummy_function,
        )
    ]
